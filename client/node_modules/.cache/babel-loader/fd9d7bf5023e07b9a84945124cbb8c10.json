{"ast":null,"code":"import _slicedToArray from \"C:\\\\dev\\\\Homework\\\\MERN-Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\Homework\\\\MERN-Google-Books-Search\\\\client\\\\src\\\\pages\\\\MyList.js\";\nimport React, { useState } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Detail } from \"../components/Detail\"; // import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction MyList() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1]; // const [formObject] = useState({})\n  // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n  // Loads all books and sets them to books\n\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, \"Books On My List\")), books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, books.map(function (book) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/books/\" + book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Detail, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \" \", book.title), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \" \", book.author), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \" \", book.synopsis, \" This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\")), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return deleteBook(book._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    })));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default MyList;","map":{"version":3,"sources":["C:/dev/Homework/MERN-Google-Books-Search/client/src/pages/MyList.js"],"names":["React","useState","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Detail","MyList","books","setBooks","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","length","map","book","_id","title","author","synopsis"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,SAASC,MAAT,QAAuB,sBAAvB,C,CACA;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACV;AADU,kBAEgBX,QAAQ,CAAC,EAAD,CAFxB;AAAA;AAAA,MAEHY,KAFG;AAAA,MAEIC,QAFJ,kBAGV;AAEA;AACA;AACA;AACA;AAEA;;;AACA,WAASC,SAAT,GAAqB;AACnBX,IAAAA,GAAG,CAACY,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,aACPJ,QAAQ,CAACI,GAAG,CAACC,IAAL,CADD;AAAA,KADX,EAIGC,KAJH,CAIS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAJZ;AAKD;;AAAA,GAjBS,CAmBV;;AACA,WAASG,UAAT,CAAoBC,EAApB,EAAwB;AACtBrB,IAAAA,GAAG,CAACoB,UAAJ,CAAeC,EAAf,EACGR,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIH,SAAS,EAAb;AAAA,KADX,EAEGK,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAFZ;AAGD;;AAIT,sBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADA,EAICR,KAAK,CAACa,MAAN,gBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCb,KAAK,CAACc,GAAN,CAAU,UAAAC,IAAI;AAAA,wBACb,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAYD,IAAI,CAACC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMD,IAAI,CAACE,KAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMF,IAAI,CAACG,MAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKH,IAAI,CAACI,QAAV,sIAHF,CADF,eAME,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE;AAAA,eAAMR,UAAU,CAACI,IAAI,CAACC,GAAN,CAAhB;AAAA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADa;AAAA,GAAd,CADD,CADA,gBAkBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtBF,CADG,CADJ,CADA;AA+BC;;AAED,eAAejB,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Detail } from \"../components/Detail\";\r\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nfunction MyList() {\r\n        // Setting our component's initial state\r\n        const [books, setBooks] = useState([])\r\n        // const [formObject] = useState({})\r\n      \r\n        // // Load all books and store them with setBooks\r\n        // useEffect(() => {\r\n        //   loadBooks()\r\n        // }, [])\r\n      \r\n        // Loads all books and sets them to books\r\n        function loadBooks() {\r\n          API.getBooks()\r\n            .then(res =>\r\n              setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n        };\r\n      \r\n        // Deletes a book from the database with a given id, then reloads books from the db\r\n        function deleteBook(id) {\r\n          API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n        }\r\n      \r\n        \r\n\r\nreturn (\r\n<Container>\r\n    <Row>\r\n <Col size=\"md-6 sm-12\">\r\n <Jumbotron>\r\n   <h1>Books On My List</h1>\r\n </Jumbotron>\r\n {books.length ? (\r\n  <List>\r\n  {books.map(book => (\r\n    <ListItem key={book._id}>\r\n      \r\n      <Link to={\"/books/\" + book._id}>\r\n        <Detail>\r\n          <h5> {book.title}</h5>\r\n          <h6> {book.author}</h6>\r\n          <p> {book.synopsis} This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n        </Detail>\r\n        <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n      </Link>   \r\n    </ListItem>\r\n  ))}\r\n</List>\r\n\r\n ) : (\r\n   <h3>No Results to Display</h3>\r\n )}\r\n</Col>\r\n</Row>\r\n</Container>\r\n);\r\n}\r\n\r\nexport default MyList;"]},"metadata":{},"sourceType":"module"}