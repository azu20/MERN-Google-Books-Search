{"ast":null,"code":"import _slicedToArray from \"C:\\\\dev\\\\Homework\\\\MERN-Google-Books-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\Homework\\\\MERN-Google-Books-Search\\\\client\\\\src\\\\pages\\\\MyList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\"; // import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction MyList() {\n  function Books() {\n    var _this = this;\n\n    // Setting our component's initial state\n    var _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n    var _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formObject = _useState4[0],\n        setFormObject = _useState4[1]; // Load all books and store them with setBooks\n\n\n    useEffect(function () {\n      loadBooks();\n    }, []); // Loads all books and sets them to books\n\n    function loadBooks() {\n      API.getBooks().then(function (res) {\n        return setBooks(res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n\n    ; // Deletes a book from the database with a given id, then reloads books from the db\n\n    function deleteBook(id) {\n      API.deleteBook(id).then(function (res) {\n        return loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n\n    function saveBook(id) {\n      API.saveBook(id).then(function (res) {\n        return loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }, \"Books On My List\")), books.length ? /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, books.map(function (book) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: book._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/books/\" + book._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      }, book.title, \" by \", book.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n        onClick: function onClick() {\n          return deleteBook(book._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 10\n        }\n      }));\n    })) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }\n    }, \"No Results to Display\"))));\n  }\n}\n\nexport default MyList;","map":{"version":3,"sources":["C:/dev/Homework/MERN-Google-Books-Search/client/src/pages/MyList.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","MyList","Books","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","saveBook","length","map","book","_id","title","author"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nfunction MyList() {\r\n    function Books() {\r\n        // Setting our component's initial state\r\n        const [books, setBooks] = useState([])\r\n        const [formObject, setFormObject] = useState({})\r\n      \r\n        // Load all books and store them with setBooks\r\n        useEffect(() => {\r\n          loadBooks()\r\n        }, [])\r\n      \r\n        // Loads all books and sets them to books\r\n        function loadBooks() {\r\n          API.getBooks()\r\n            .then(res =>\r\n              setBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n        };\r\n      \r\n        // Deletes a book from the database with a given id, then reloads books from the db\r\n        function deleteBook(id) {\r\n          API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n        }\r\n      \r\n        function saveBook(id) {\r\n          API.saveBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n        }\r\n\r\nreturn (\r\n<Container>\r\n    <Row>\r\n <Col size=\"md-6 sm-12\">\r\n <Jumbotron>\r\n   <h1>Books On My List</h1>\r\n </Jumbotron>\r\n {books.length ? (\r\n   <List>\r\n     {books.map(book => (\r\n       <ListItem key={book._id}>\r\n         <Link to={\"/books/\" + book._id}>\r\n           <strong>\r\n             {book.title} by {book.author}\r\n           </strong>\r\n         </Link>\r\n         <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n       </ListItem>\r\n     ))}\r\n   </List>\r\n\r\n\r\n ) : (\r\n   <h3>No Results to Display</h3>\r\n )}\r\n</Col>\r\n</Row>\r\n</Container>\r\n);\r\n}\r\n}\r\nexport default MyList;"]},"metadata":{},"sourceType":"module"}